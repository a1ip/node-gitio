{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;qBAEW,OAAO;;oBACd,MAAM;;;;AAEvB,IAAM,cAAc,GAAG;AACrB,MAAI,EAAE,QAAQ;AACd,QAAM,EAAE,MAAM;AACd,MAAI,EAAE,SAAS;CAChB,CAAC;;AAEF,IAAI,KAAK,GAAG,SAAR,KAAK,CAAI,OAAO,EAAE,IAAI,EAAK;;AAE7B,SAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,QAAI,IAAI,GAAG,MAAM,GAAG,OAAO,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAA,AAAC,CAAC;AAC5D,QAAI,GAAG,GAAG,oBACR,MAAM,CAAC,MAAM,CACX,EAAE,EACF,cAAc,EACd,EAAE,OAAO,EAAE,EAAE,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAC/C,EAAE,UAAC,QAAQ,EAAK;AACf,UAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;AAC9B,eAAO,MAAM,CAAC,kBAAK,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;OAChF;;AAED,UAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,cAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC7B,cAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAI;eAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;OAAA,CAAC,CAAC;AAC5D,cAAQ,CAAC,EAAE,CAAC,KAAK,EAAE;eAAM,OAAO,CAAC,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;OAAA,CAAC,CAAC;KAC1E,CAAC,CAAC;;AAEH,OAAG,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK,EAAK;AACzB,YAAM,CAAC,KAAK,CAAC,CAAC;KACf,CAAC,CAAC;;AAEH,OAAG,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AACvB,OAAG,CAAC,GAAG,EAAE,CAAC;GAEX,CAAC,CAAC;CACJ,CAAC;;qBAEa,KAAK","file":"index.js","sourcesContent":["'use strict';\n\nimport { request } from 'https';\nimport Boom from 'boom';\n\nconst REQUEST_CONFIG = {\n  host: 'git.io',\n  method: 'POST',\n  path: '/create'\n};\n\nvar gitIo = (address, code) => {\n\n  return new Promise((resolve, reject) => {\n    let body = 'url=' + address + (code ? '&code=' + code : '');\n    let req = request(\n      Object.assign(\n        {},\n        REQUEST_CONFIG,\n        { headers: { 'content-length': body.length } }\n      ), (response) => {\n        if (response.statusCode >= 400) {\n          return reject(Boom.create(response.statusCode, response.statusText, response));\n        }\n\n        var output = [];\n\n        response.setEncoding('utf8');\n        response.on('data', (data) => output.push(data.toString()));\n        response.on('end', () => resolve('https://git.io/' + output.join('')));\n    });\n\n    req.on('error', (error) => {\n      reject(error);\n    });\n\n    req.write(body + '\\n');\n    req.end();\n\n  });\n};\n\nexport default gitIo;\n"]}